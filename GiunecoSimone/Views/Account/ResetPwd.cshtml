@model GiunecoSimone.Models.ResetPwd

@{
    Layout = "~/Views/Shared/PreLayout.cshtml";
    ViewBag.Title = "Password Reset";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
    {
        <div class="alert alert-success">
            <strong>Fatto!</strong> Password cambiata. Clicca qui per @Html.ActionLink("accedere", "Login")
        </div>
    }
    else if (ViewBag.Message != null && ViewBag.Message != "")
    {
        <div class="alert alert-danger">
            <strong>Errore!</strong> @ViewBag.Message
        </div>
    }

    <div class="form-horizontal">
        <hr />

        <div class="text-danger">
            @ViewBag.Message
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(x => x.ResetCode)
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Modifica" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
